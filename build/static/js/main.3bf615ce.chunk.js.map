{"version":3,"sources":["components/Navigation/NavigationItem.js","store/actions/searchActions.js","utils/utility.js","store/reducers/authReducers.js","components/UI/Button/Button.js","store/actions/actionTypes.js","store/thunk/authThunk.js","store/actions/index.js","store/actions/authActions.js","hoc/Aux/Aux.js","components/Navigation/Navigation.js","hoc/Layout/Layout.js","components/Search/Search.js","store/thunk/searchThunk.js","containers/Main/Main.js","containers/Authenticate/Logout/Logout.js","components/Post/Post.js","components/Posts/Posts.js","App.js","serviceWorker.js","store/reducers/searchReducer.js","store/store.js","index.js"],"names":["navigationItem","props","className","to","link","exact","activeClassName","children","receivedData","data","type","actionTypes","receivedError","updateObject","oldObject","updatedProperties","checkValidity","value","rules","isValid","required","trim","minLength","length","maxLength","isEmail","test","isNumeric","initialState","token","userId","error","loading","authRedirectPath","authStart","state","action","authSuccess","idToken","authFail","authLogout","localStorage","removeItem","setAuthRedirectPath","path","authReducer","button","disabled","btnType","join","onClick","clicked","FETCHING_DATA","RECEIVED_DATA","RECEIVED_ERROR","AUTH_START","AUTH_SUCCESS","AUTH_FAIL","AUTH_LOGOUT","SET_AUTH_REDIRECT_PATH","auth","email","password","isSignup","dispatch","authActions","authData","returnSecureToken","url","axios","post","then","response","expirationDate","Date","getTime","expiresIn","setItem","localId","checkAuthTimeout","catch","err","authCheckState","getItem","expirationTime","setTimeout","logout","aux","navigation","isAuthenticated","NavigationItem","Button","connect","Aux","Search","handleChange","event","preventDefault","setState","searchTerm","target","handleSubmit","getState","get","searchActions","apiCallThunk","bind","onSubmit","this","placeholder","onChange","Component","searchReducer","main","src","alt","onLogout","useEffect","donation","acceptingDonations","category","missionStatement","website","height","width","href","orghunterUrl","rel","charityName","city","zip","ein","score","searchResult","Array","isArray","updatedPosts","map","zipCode","recordCount","Donations","React","lazy","Authenticate","withRouter","onTryAutoSignup","actions","routes","render","component","Main","Logout","fallback","Boolean","window","location","hostname","match","isFetching","isError","rootReducer","combineReducers","store","createStore","applyMiddleware","thunk","ReactDOM","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.3bf615ce.chunk.js","sourcesContent":["import React from \"react\";\nimport { NavLink } from \"react-router-dom\";\n\nimport \"./NavigationItem.css\";\n\nconst navigationItem = props => (\n  <div className=\"NavigationItem\">\n    <NavLink to={props.link} exact={props.exact} activeClassName=\"active\">\n      {props.children}\n    </NavLink>\n  </div>\n);\n\nexport default navigationItem;\n","import * as actionTypes from \"./actionTypes\";\n\nexport const fetchingData = () => {\n  return {\n    type: actionTypes.FETCHING_DATA\n  };\n};\n\nexport const receivedData = data => {\n  return {\n    type: actionTypes.RECEIVED_DATA,\n    data: data\n  };\n};\n\nexport const receivedError = () => {\n  return {\n    type: actionTypes.RECEIVED_ERROR\n  };\n};\n","export const updateObject = (oldObject, updatedProperties) => {\n  return {\n    ...oldObject,\n    ...updatedProperties\n  };\n};\n\nexport const checkValidity = (value, rules) => {\n  let isValid = true;\n  if (!rules) {\n    return true;\n  }\n\n  if (rules.required) {\n    isValid = value.trim() !== \"\" && isValid;\n  }\n\n  if (rules.minLength) {\n    isValid = value.length >= rules.minLength && isValid;\n  }\n\n  if (rules.maxLength) {\n    isValid = value.length <= rules.maxLength && isValid;\n  }\n\n  if (rules.isEmail) {\n    const pattern = /[a-z0-9!#$%&'*+/=?^_`{|}~-]+(?:\\.[a-z0-9!#$%&'*+/=?^_`{|}~-]+)*@(?:[a-z0-9](?:[a-z0-9-]*[a-z0-9])?\\.)+[a-z0-9](?:[a-z0-9-]*[a-z0-9])?/;\n    isValid = pattern.test(value) && isValid;\n  }\n\n  if (rules.isNumeric) {\n    const pattern = /^\\d+$/;\n    isValid = pattern.test(value) && isValid;\n  }\n\n  return isValid;\n};\n","import * as actionTypes from \"../actions/actionTypes\";\nimport { updateObject } from \"../../utils/utility\";\n\nconst initialState = {\n  token: null,\n  userId: null,\n  error: null,\n  loading: false,\n  authRedirectPath: \"/\"\n};\n\nconst authStart = (state, action) => {\n  return updateObject(state, { error: null, loading: true });\n};\n\nconst authSuccess = (state, action) => {\n  return updateObject(state, {\n    token: action.idToken,\n    userId: action.userId,\n    error: null,\n    loading: false\n  });\n};\n\nconst authFail = (state, action) => {\n  return updateObject(state, {\n    error: action.error,\n    loading: false\n  });\n};\n\nexport const authLogout = (state, action) => {\n  localStorage.removeItem(\"token\");\n  localStorage.removeItem(\"expirationDate\");\n  localStorage.removeItem(\"userId\");\n  return updateObject(state, { token: null, userId: null });\n};\n\nconst setAuthRedirectPath = (state, action) => {\n  return updateObject(state, { authRedirectPath: action.path });\n};\n\nconst authReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case actionTypes.AUTH_START:\n      return authStart(state, action);\n    case actionTypes.AUTH_SUCCESS:\n      return authSuccess(state, action);\n    case actionTypes.AUTH_FAIL:\n      return authFail(state, action);\n    case actionTypes.AUTH_LOGOUT:\n      return authLogout(state, action);\n    case actionTypes.SET_AUTH_REDIRECT_PATH:\n      return setAuthRedirectPath(state, action);\n    default:\n      return state;\n  }\n};\n\nexport default authReducer;\n","import React from \"react\";\n\nimport \"./Button.css\";\n\nconst button = props => (\n  <button\n    disabled={props.disabled}\n    className={[\"Button\", [props.btnType]].join(\"\")}\n    onClick={props.clicked}\n  >\n    {props.children}\n  </button>\n);\n\nexport default button;\n","export const FETCHING_DATA = \"FETCHING_DATA\";\nexport const RECEIVED_DATA = \"RECEIVED_DATA\";\nexport const RECEIVED_ERROR = \"RECEIVED_ERROR\";\n\nexport const AUTH_START = \"AUTH_START \";\nexport const AUTH_SUCCESS = \"AUTH_SUCCESS\";\nexport const AUTH_FAIL = \"AUTH_FAIL\";\nexport const AUTH_LOGOUT = \"AUTH_LOGOUT\";\nexport const SET_AUTH_REDIRECT_PATH = \"SET_AUTH_REDIRECT_PATH\";\n","import axios from \"axios\";\n\nimport * as authActions from \"../actions/authActions\";\n\nconst FIREBASE_API_KEY = process.env.REACT_APP_FIREBASE_API_KEY;\n\nexport const auth = (email, password, isSignup) => {\n  return dispatch => {\n    dispatch(authActions.authStart());\n    const authData = {\n      email: email,\n      password: password,\n      returnSecureToken: true\n    };\n    let url =\n      \"https://identitytoolkit.googleapis.com/v1/accounts:signUp?key=\" +\n      FIREBASE_API_KEY;\n    if (!isSignup) {\n      url =\n        \"https://identitytoolkit.googleapis.com/v1/accounts:signInWithPassword?key=\" +\n        FIREBASE_API_KEY;\n    }\n    axios\n      .post(url, authData)\n      .then(response => {\n        const expirationDate = new Date(\n          new Date().getTime() + response.data.expiresIn * 1000\n        );\n        localStorage.setItem(\"token\", response.data.idToken);\n        localStorage.setItem(\"expirationDate\", expirationDate);\n        localStorage.setItem(\"userId\", response.data.localId);\n        dispatch(\n          authActions.authSuccess(response.data.idToken, response.data.localId)\n        );\n        dispatch(checkAuthTimeout(response.data.expiresIn));\n      })\n      .catch(err => {\n        dispatch(authActions.authFail(err.response.data.error));\n      });\n  };\n};\n\nexport const authCheckState = () => {\n  return dispatch => {\n    const token = localStorage.getItem(\"token\");\n    if (!token) {\n      dispatch(authActions.logout());\n    } else {\n      const expirationDate = new Date(localStorage.getItem(\"expirationDate\"));\n      if (expirationDate <= new Date()) {\n        dispatch(authActions.logout());\n      } else {\n        const userId = localStorage.getItem(\"userId\");\n        dispatch(authActions.authSuccess(token, userId));\n        dispatch(\n          checkAuthTimeout(\n            (expirationDate.getTime() - new Date().getTime()) / 1000\n          )\n        );\n      }\n    }\n  };\n};\n\nexport const checkAuthTimeout = expirationTime => {\n  return dispatch => {\n    setTimeout(() => {\n      dispatch(authActions.logout());\n    }, expirationTime * 1000);\n  };\n};\n","export { fetchingData, receivedData, receivedError } from \"./searchActions\";\nexport { setAuthRedirectPath, logout } from \"./authActions\";\nexport { authLogout } from \"../reducers/authReducers\";\nexport { auth, authCheckState, checkAuthTimeout } from \"../thunk/authThunk\";\n","import * as actionTypes from \"./actionTypes\";\n\nexport const authStart = () => {\n  return {\n    type: actionTypes.AUTH_START\n  };\n};\n\nexport const authSuccess = (token, userId) => {\n  return {\n    type: actionTypes.AUTH_SUCCESS,\n    idToken: token,\n    userId: userId\n  };\n};\n\nexport const authFail = error => {\n  return {\n    type: actionTypes.AUTH_FAIL,\n    error: error\n  };\n};\n\nexport const logout = () => {\n  return {\n    type: actionTypes.AUTH_LOGOUT\n  };\n};\n\nexport const setAuthRedirectPath = path => {\n  return {\n    type: actionTypes.SET_AUTH_REDIRECT_PATH,\n    path: path\n  };\n};\n","const aux = props => props.children;\n\nexport default aux;\n","import React from \"react\";\n\nimport \"./Navigation.css\";\nimport NavigationItem from \"./NavigationItem\";\nimport Button from \"../UI/Button/Button\";\n\nconst navigation = (props) => (\n  <div className=\"Bar\">\n    {!props.isAuthenticated ? (\n      <NavigationItem link=\"/\" exact>\n        <Button btnType=\"Home\">HOME</Button>\n      </NavigationItem>\n    ) : (\n      <NavigationItem link=\"/donations\">\n        <Button btnType=\"Impacts\">YOUR IMPACTS</Button>\n      </NavigationItem>\n    )}\n    <Button btnType=\"Login\">\n      {!props.isAuthenticated ? (\n        <NavigationItem link=\"/auth\">LOG IN</NavigationItem>\n      ) : (\n        <NavigationItem link=\"/logout\">LOG OUT</NavigationItem>\n      )}\n    </Button>\n  </div>\n);\n\nexport default navigation;\n","import React from \"react\";\nimport { connect } from \"react-redux\";\n\nimport Aux from \"../Aux/Aux\";\nimport Navigation from \"../../components/Navigation/Navigation\";\nimport \"./Layout.css\";\n\nconst layout = props => {\n  return (\n    <Aux>\n      <nav className=\"Navigation\">\n        <Navigation isAuthenticated={props.isAuthenticated} />\n      </nav>\n      <main className=\"Content\">{props.children}</main>\n    </Aux>\n  );\n};\n\nconst mapStateToProps = state => {\n  return {\n    isAuthenticated: state.authReducer.token\n  };\n};\n\nexport default connect(mapStateToProps)(layout);\n","import React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport { apiCallThunk } from \"../../store/thunk/searchThunk\";\n\nimport \"./Search.css\";\n\nclass Search extends Component {\n  constructor() {\n    super();\n    this.state = { searchTerm: \"\" };\n    this.handleChange = this.handleChange.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n  }\n\n  handleChange = event => {\n    event.preventDefault();\n    this.setState({ searchTerm: event.target.value });\n  };\n\n  handleSubmit = event => {\n    event.preventDefault();\n    const searchTerm = this.state.searchTerm;\n    this.props.dispatch(apiCallThunk(searchTerm));\n  };\n\n  render() {\n    return (\n      <div className=\"container\">\n        <h1 className=\"searchTitle\">Show and support what you love</h1>\n        <form onSubmit={this.handleSubmit} className=\"searchForm\">\n          <input\n            type=\"text\"\n            placeholder=\"What do you want to support today?\"\n            onChange={this.handleChange}\n          />\n          <button className=\"button\" onClick={this.handleSubmit}>\n            SEARCH\n          </button>\n        </form>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = state => {\n  return {\n    state: state.searchReducer\n  };\n};\n\nexport default connect(mapStateToProps)(Search);\n","import axios from \"axios\";\n\nimport * as searchActions from \"../actions/searchActions\";\n\nexport const apiCallThunk = searchTerm => {\n  return function(dispatch, getState) {\n    return axios\n      .get(`http://localhost:9000/searchAPI?searchTerm=${searchTerm}`)\n      .then(response => {\n        dispatch(searchActions.receivedData(response.data));\n      })\n      .catch(error => dispatch(searchActions.receivedError()));\n  };\n};\n","import React from \"react\";\n\nimport Search from \"../../components/Search/Search\";\nimport NavigationItem from \"../../components/Navigation/NavigationItem\";\nimport \"./Main.css\";\n\nconst main = () => {\n  return (\n    <div className=\"Main\">\n      <div className=\"Logo\">\n        <NavigationItem link=\"/\" exact>\n          <img src=\"/Logo.png\" alt=\"Logo\" />\n        </NavigationItem>\n        <NavigationItem link=\"/\" exact>\n          <h1>Better World</h1>\n        </NavigationItem>\n      </div>\n      <div className=\"Search\">\n        <Search />\n      </div>\n    </div>\n  );\n};\n\nexport default main;\n","import React, { useEffect } from \"react\";\nimport { Redirect } from \"react-router-dom\";\nimport { connect } from \"react-redux\";\n\nimport * as authActions from \"../../../store/actions/authActions\";\n\nconst Logout = props => {\n  const { onLogout } = props;\n\n  useEffect(() => {\n    onLogout();\n  }, [onLogout]);\n\n  return <Redirect to=\"/\" />;\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    onLogout: () => dispatch(authActions.logout())\n  };\n};\n\nexport default connect(null, mapDispatchToProps)(Logout);\n","import React from \"react\";\n\nimport \"./Post.css\";\n\nconst post = (props) => {\n  let donation = true;\n  if (props.acceptingDonations === 0) {\n    donation = false;\n  }\n\n  let category = true;\n  if (props.category === \"Not Provided\") {\n    category = false;\n  }\n\n  let missionStatement = true;\n  if (!props.missionStatement) {\n    missionStatement = false;\n  }\n\n  let website = true;\n  if (!props.website) {\n    website = false;\n  }\n\n  return (\n    <article className=\"Post\" onClick={props.clicked}>\n      <div>\n        <img src=\"../public/PostPictures/1.jpg\" height=\"200\" width=\"200\"></img>\n        <a href={props.orghunterUrl} target=\"_blank\" rel=\"noopener noreferrer\">\n          <h1>{props.charityName}</h1>\n        </a>\n        <small>\n          {props.city}, {props.state}, {props.zip}\n        </small>\n        <ul>\n          <b>EIN</b> {props.ein}\n        </ul>\n        <ul>\n          {category && (\n            <>\n              <b>Impacts </b> <span>{`${props.category} Fields`}</span>\n            </>\n          )}\n        </ul>\n        <ul>\n          <b>Accepting Donations?</b> {donation ? \" Yes\" : \" No\"}\n        </ul>\n        <ul>\n          <b>Score</b> {props.score} / 5\n        </ul>\n        <ul>\n          {website ? (\n            <a href={props.website} target=\"_blank\" rel=\"noopener noreferrer\">\n              <b>More Info</b>\n            </a>\n          ) : null}\n        </ul>\n        <ul>{missionStatement ? props.missionStatement : null}</ul>\n      </div>\n    </article>\n  );\n};\n\nexport default post;\n","import React from \"react\";\nimport { connect } from \"react-redux\";\n\nimport Post from \"../Post/Post\";\nimport \"./Posts.css\";\n\nconst posts = props => {\n  if (Array.isArray(props.searchResult)) {\n    const updatedPosts = props.searchResult.map(post => {\n      return (\n        <Post\n          charityName={post.charityName}\n          ein={post.ein}\n          orghunterUrl={post.url}\n          website={post.website}\n          city={post.city}\n          state={post.state}\n          zip={post.zipCode}\n          category={post.category}\n          score={post.score}\n          acceptingDonations={post.acceptingDonations}\n          missionStatement={post.missionStatement}\n        />\n      );\n    });\n    return (\n      <div className=\"Results\">\n        <h2 className=\"ResultsTopic\">\n          SEARCH RESULTS {props.searchResult.recordCount}\n        </h2>\n        <div className=\"Posts\">{updatedPosts}</div>\n      </div>\n    );\n  } else {\n    return null;\n  }\n};\n\nconst mapStateToProps = state => {\n  return {\n    searchResult: state.searchReducer.searchResult\n  };\n};\n\nexport default connect(mapStateToProps)(posts);\n","import React, { useEffect, Suspense } from \"react\";\nimport { Route, Switch, withRouter, Redirect } from \"react-router-dom\";\nimport { connect } from \"react-redux\";\n\nimport Layout from \"./hoc/Layout/Layout\";\nimport Main from \"./containers/Main/Main\";\nimport Logout from \"./containers/Authenticate/Logout/Logout\";\nimport Posts from \"./components/Posts/Posts\";\nimport * as actions from \"./store/actions/index\";\nimport \"./App.css\";\n\nconst Donations = React.lazy(() => {\n  return import(\"./containers/Donations/Donations\");\n});\n\nconst Authenticate = React.lazy(() => {\n  return import(\"./containers/Authenticate/Authenticate\");\n});\n\nconst App = props => {\n  const { onTryAutoSignup } = props;\n\n  useEffect(() => {\n    onTryAutoSignup();\n  }, [onTryAutoSignup]);\n\n  let routes = (\n    <Switch>\n      <Route path=\"/auth\" render={props => <Authenticate {...props} />} />\n      <Route path=\"/\" exact component={Main} />\n      <Redirect to=\"/\" />\n    </Switch>\n  );\n\n  if (props.isAuthenticated) {\n    routes = (\n      <Switch>\n        <Route path=\"/donations\" render={props => <Donations {...props} />} />\n        <Route path=\"/logout\" component={Logout} />\n        <Route path=\"/auth\" render={props => <Authenticate {...props} />} />\n        <Route path=\"/\" exact component={Main} />\n        <Redirect to=\"/\" />\n      </Switch>\n    );\n  }\n\n  return (\n    <div className=\"App\">\n      <div className=\"MainNav\">\n        <Suspense fallback={<p>Loading...</p>}>{routes}</Suspense>\n        <Layout></Layout>\n      </div>\n      <div className=\"Posts\">\n        <Posts />\n      </div>\n    </div>\n  );\n};\n\nconst mapStateToProps = state => {\n  return {\n    isAuthenticated: state.authReducer.token !== null\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    onTryAutoSignup: () => dispatch(actions.authCheckState())\n  };\n};\n\nexport default withRouter(connect(mapStateToProps, mapDispatchToProps)(App));\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === \"localhost\" ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === \"[::1]\" ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === \"production\" && \"serviceWorker\" in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener(\"load\", () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            \"This web app is being served cache-first by a service \" +\n              \"worker. To learn more, visit https://bit.ly/CRA-PWA\"\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === \"installed\") {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                \"New content is available and will be used when all \" +\n                  \"tabs for this page are closed. See https://bit.ly/CRA-PWA.\"\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log(\"Content is cached for offline use.\");\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error(\"Error during service worker registration:\", error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { \"Service-Worker\": \"script\" }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get(\"content-type\");\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf(\"javascript\") === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        \"No internet connection found. App is running in offline mode.\"\n      );\n    });\n}\n\nexport function unregister() {\n  if (\"serviceWorker\" in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","const initialState = {\n  searchResult: {},\n  isFetching: false,\n  isError: false\n};\n\nconst searchReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case \"FETCHING_DATA\":\n      return {\n        searchResult: {},\n        isFetching: true,\n        isError: false\n      };\n    case \"RECEIVED_DATA\":\n      return {\n        searchResult: action.data,\n        isFetching: false,\n        isError: false\n      };\n    case \"RECEIVED_ERROR\":\n      return {\n        isFetching: false,\n        isError: true\n      };\n    default:\n      return state;\n  }\n};\n\nexport default searchReducer;\n","import { createStore, applyMiddleware, combineReducers } from \"redux\";\nimport thunk from \"redux-thunk\";\n\nimport searchReducer from \"./reducers/searchReducer\";\nimport authReducer from \"./reducers/authReducers\";\n\nconst rootReducer = combineReducers({\n  searchReducer: searchReducer,\n  authReducer: authReducer\n});\n\nconst store = createStore(rootReducer, applyMiddleware(thunk));\n\nexport default store;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { BrowserRouter } from \"react-router-dom\";\nimport { Provider } from \"react-redux\";\n\nimport \"./index.css\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\nimport store from \"./store/store\";\n\nReactDOM.render(\n  <Provider store={store}>\n    <BrowserRouter>\n      <App />\n    </BrowserRouter>\n  </Provider>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}